package ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import objects.RelationshipController;
import tables.UserTable;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


public class AdminView {
    private JLabel deleteUserLbl;
    private JTextField usernameField;
    private JButton deleteBttn;
    private JPanel basePane;
    private JButton backBttn;
    private JLabel deleteMsg;
    private JLabel statBttn;
    private JLabel likesLbl;
    private JLabel visitsLbl;
    private JLabel matchesLbl;
    private JComboBox<String> timeCombo;
    private JLabel visitsValueLbl;
    private JLabel likesValueLbl;
    private JLabel matchesValueLbl;
    private RelationshipController controller;


    public AdminView(RelationshipController c) {
        controller = c;

        String[] timeSelections = {"Hour", "Day", "Week", "Month", "Year"};
        timeCombo.setModel(new DefaultComboBoxModel<>(timeSelections));
        updateStatLabels();

        ActionListener deleteListener = e -> deleteUser();

        deleteBttn.addActionListener(deleteListener);
        usernameField.addActionListener(deleteListener);

        backBttn.addActionListener(e -> controller.restartSearchView(controller));

        timeCombo.addActionListener(e -> updateStatLabels());
    }

    public void deleteUser() {
        deleteMsg.setText(UserTable.deleteUser(RelationshipController.getConnection(), usernameField.getText(), controller.getActiveUser().getUsername()));
    }

    public static JFrame init(RelationshipController c) {
        JFrame frame = new JFrame("AdminView");
        frame.setContentPane(new AdminView(c).basePane);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setSize(500, 300);
        return frame;
    }

    private void updateStatLabels() {
        visitsValueLbl.setText(Integer.toString(controller.getVisitCount((String) timeCombo.getSelectedItem())));
        likesValueLbl.setText(Integer.toString(controller.getLikeCount((String) timeCombo.getSelectedItem())));
        matchesValueLbl.setText(Integer.toString(controller.getMatchCount((String) timeCombo.getSelectedItem())));
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        basePane = new JPanel();
        basePane.setLayout(new GridLayoutManager(7, 6, new Insets(0, 0, 0, 0), -1, -1));
        basePane.setMinimumSize(new Dimension(500, 300));
        basePane.setPreferredSize(new Dimension(500, 300));
        basePane.setRequestFocusEnabled(false);
        basePane.setVerifyInputWhenFocusTarget(false);
        deleteUserLbl = new JLabel();
        deleteUserLbl.setText("Enter Username to delete");
        basePane.add(deleteUserLbl, new GridConstraints(1, 0, 1, 4, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        basePane.add(spacer1, new GridConstraints(2, 3, 5, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        usernameField = new JTextField();
        usernameField.setText("");
        basePane.add(usernameField, new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        deleteBttn = new JButton();
        deleteBttn.setText("Delete User");
        basePane.add(deleteBttn, new GridConstraints(1, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        backBttn = new JButton();
        backBttn.setHideActionText(false);
        backBttn.setText("Back");
        basePane.add(backBttn, new GridConstraints(0, 0, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        deleteMsg = new JLabel();
        deleteMsg.setText("");
        basePane.add(deleteMsg, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        basePane.add(spacer2, new GridConstraints(3, 2, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        statBttn = new JLabel();
        statBttn.setText("Statistics for last: ");
        basePane.add(statBttn, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        likesLbl = new JLabel();
        likesLbl.setText("Likes:");
        basePane.add(likesLbl, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        visitsLbl = new JLabel();
        visitsLbl.setText("Visits: ");
        basePane.add(visitsLbl, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        matchesLbl = new JLabel();
        matchesLbl.setText("Matches:");
        basePane.add(matchesLbl, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        visitsValueLbl = new JLabel();
        visitsValueLbl.setText("Label");
        basePane.add(visitsValueLbl, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        likesValueLbl = new JLabel();
        likesValueLbl.setText("Label");
        basePane.add(likesValueLbl, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        matchesValueLbl = new JLabel();
        matchesValueLbl.setText("Label");
        basePane.add(matchesValueLbl, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        timeCombo = new JComboBox();
        basePane.add(timeCombo, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return basePane;
    }
}


